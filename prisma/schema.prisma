// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String    @id @default(cuid())
  name              String
  username          String    @unique
  email             String    @unique
  emailVerified     DateTime?
  password          String?
  image             String?
  profileImage      String?
  profileCoverImage String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  followedBy User[] @relation("UserFollows")
  following  User[] @relation("UserFollows")

  post       Post[]
  likedPosts Post[] @relation("likedPosts")

  accounts Account[]
}

model Post {
  id        String   @id @default(cuid())
  image     String?
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  likedBy User[] @relation("likedPosts")

  replies Post[] @relation("replies")
  replyTo Post[] @relation("replies")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}
